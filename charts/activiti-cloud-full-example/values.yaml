# Default values for activiti-cloud-full-example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## i.e Jx environment
# expose: 
#   config:
#     domain: &domain "1.2.3.4.nip.io"
#     http: &http true

global:
  ## Configure pull secrets for all deployments
  registryPullSecrets: []

  # Use Yaml formatted string to add extra environment properties to all deployments, i.e.
  extraEnv: |
    # - name: SERVER_USEFORWARDHEADERS
    #   value: "true"
    # - name: SERVER_TOMCAT_INTERNALPROXIES
    #   value: ".*"
    # - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    #   value: "*"

  keycloak:
    ## Configure Activiti Keycloak host template, i.e. "activiti-keycloak.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    #host: '{{ template "common.gateway-host" . }}'
    host: 'identity.{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}'

    ## Set full url to configure external Keycloak, https://my.keycloak.com/auth
    # if not set, keycloak deployment is automatically exposed on gaetway host, i.e. http://activiti-cloud-gateway.REPLACEME/auth
    url: ""

    ## Configure Keycloak realm
    realm: "activiti"
    resource: "activiti"
    client: "activiti"

    ## Use Yaml formatted string to add keycloak properties to deployments
    extraEnv: |
      # - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      #   value: "false" 

  gateway:
    ## Set to configure single domain name for all services, i.e. "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: 'gateway.{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}'

    ## Set to false enables HTTPS configuration on all urls 
    http: "true"

    ## Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "false"

    ## Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    #  helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    ## Configure global annotations for all service ingresses, i.e. 
    annotations: 
      certmanager.k8s.io/issuer: letsencrypt-prod

    ## Or simply enable templated domain host coniguration in Jx environment
    # host: "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    # domain: *domain ## Sync with Jx expose controller domain conig 
    # http: *http ## Sync with Jx expose controller http conig
    # tlsacme: *tlsacme ## Sync with Jx expose controller tlsacme conig
  stagemonitor:
    active: true
    reporting:
      elasticsearch:
        url: https://search-activiti-stagemonitor-uw2t4524hl7jvjzthwzyod7ceq.ap-southeast-2.es.amazonaws.com


activiti-cloud-modeling:
  enabled: true
  service:
    name: modeling
  frontend:  
    image:
      repository: activiti/activiti-modeling-app
      #tag: 7.1.0.M4
      pullPolicy: Always
  backend:    
    image:
      repository: activiti/activiti-cloud-modeling
      #tag: 7.1.0.M4
      pullPolicy: Always

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
    frontend:
      basepath: "/modeling"
      annotations: {}
    backend:
      prefix: "modeling-service"
      image:
      annotations: {}
    backend:
      prefix: "modeling-service"
      annotations: {}

runtime-bundle:
  replicaCount: 2
  enabled: true
  service: 
    name: rb
  readinessProbe:
    initialDelaySeconds: 120
  image:
    pullPolicy: Always
    repository: introproventures/example-runtime-bundle
    tag: AAE-731
  extraEnv: |
    - name: SPRING_CLOUD_STREAM_BINDINGS_AUDITPRODUCER_PRODUCER_PARTITION_COUNT
      value:  "5"
    - name: SPRING_CLOUD_STREAM_BINDINGS_AUDITPRODUCER_PRODUCER_PARTITION_KEY_EXPRESSION
      value: "headers['processInstanceId']?:T(java.lang.Math).random()*100"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.activiti.engine,org.springframework.cloud.stream'

activiti-cloud-query:
  replicaCount: 1
  service: 
    name: query
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-query
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-query
  extraEnv: |
    - name: ACT_QUERY_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_QUERY_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_QUERY_CONSUMER_INSTANCE_INDEX
      value: "0"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-query1:
  replicaCount: 1
  service: 
    name: query-1
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-query
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-query
  extraEnv: |
    - name: ACT_QUERY_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_QUERY_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_QUERY_CONSUMER_INSTANCE_INDEX
      value: "1"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-query2:
  replicaCount: 1
  service: 
    name: query-2
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-query
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-query
  extraEnv: |
    - name: ACT_QUERY_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_QUERY_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_QUERY_CONSUMER_INSTANCE_INDEX
      value: "2"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-query3:
  replicaCount: 1
  readinessProbe:
    initialDelaySeconds: 80
  service: 
    name: query-3
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-query
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-query
  extraEnv: |
    - name: ACT_QUERY_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_QUERY_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_QUERY_CONSUMER_INSTANCE_INDEX
      value: "3"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-query4:
  replicaCount: 1
  service: 
    name: query-4
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-query
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-query
  extraEnv: |
    - name: ACT_QUERY_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_QUERY_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_QUERY_CONSUMER_INSTANCE_INDEX
      value: "4"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-messages:
  enabled: true
  service: 
    name: messages
  image:
    pullPolicy: Always
    repository: activiti/activiti-cloud-messages
    #tag: 7.1.0.M4

activiti-cloud-connector:
  enabled: true
  service: 
    name: example-cloud-connector
  image:
    pullPolicy: Always
    repository: activiti/example-cloud-connector
    #tag: 7.1.0.M4

activiti-cloud-notifications-graphql:
  replicaCount: 3
  enabled: true
  service: 
    name: notifications
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-notifications-graphql
    tag: AAE-731
  resources:
    requests:
      cpu: 1000m
      memory: 1024Mi
  postgres:
    name: postgres-query
  extraEnv: |
    - name: SERVER_TOMCAT_MINSPARETHREADS
      value: "100"
    - name: SPRING_CLOUD_STREAM_BINDINGS_GRAPHQLENGINEEVENTSCONSUMERSOURCE_CONSUMER_CONCURRENCY
      value: "1"
    - name: SPRING_CLOUD_STREAM_RABBIT_BINDINGS_GRAPHQLENGINEEVENTSCONSUMERSOURCE_CONSUMER_PREFETCH
      value: "40"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,graphql,com.introproventures.graphql'
    {{- if include "common.ingress-path" . }}
    - name: SERVER_SERVLET_CONTEXTPATH
      value: {{ include "common.ingress-path" . | quote }}
    {{- end }}

activiti-cloud-audit:
  replicaCount: 1
  service: 
    name: audit
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-audit
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-audit
  extraEnv: |
    - name: ACT_AUDIT_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_AUDIT_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_AUDIT_CONSUMER_INSTANCE_INDEX
      value: "0"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-audit-1:
  replicaCount: 1
  service: 
    name: audit-1
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-audit
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-audit
  extraEnv: |
    - name: ACT_AUDIT_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_AUDIT_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_AUDIT_CONSUMER_INSTANCE_INDEX
      value: "1"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-audit-2:
  replicaCount: 1
  service: 
    name: audit-2
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-audit
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-audit
  extraEnv: |
    - name: ACT_AUDIT_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_AUDIT_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_AUDIT_CONSUMER_INSTANCE_INDEX
      value: "2"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-audit-3:
  replicaCount: 1
  service: 
    name: audit-3
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-audit
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-audit
  extraEnv: |
    - name: ACT_AUDIT_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_AUDIT_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_AUDIT_CONSUMER_INSTANCE_INDEX
      value: "3"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-audit-4:
  replicaCount: 1
  service: 
    name: audit-4
  readinessProbe:
    initialDelaySeconds: 80
  image:
    pullPolicy: Always
    repository: introproventures/activiti-cloud-audit
    tag: AAE-731
  postgres:
    enabled: true
    name: postgres-audit
  extraEnv: |
    - name: ACT_AUDIT_CONSUMER_PARTITIONED
      value: "true"
    - name: ACT_AUDIT_CONSUMER_PREFETCH
      value: "30"
    - name: ACT_AUDIT_CONSUMER_INSTANCE_INDEX
      value: "4"
    - name: STAGEMONITOR_ACTIVE
      value: '{{ .Values.global.stagemonitor.active }}'
    - name: STAGEMONITOR_INSTANCENAME
      value: '{{ .Release.Name }}'
    - name: STAGEMONITOR_APPLICATIONNAME
      value: '{{ .Values.service.name }}'
    - name: STAGEMONITOR_REPORTING_ELASTICSEARCH_URL
      value: '{{ .Values.global.stagemonitor.reporting.elasticsearch.url }}'
    - name: STAGEMONITOR_INSTRUMENT_INCLUDE
      value: 'org.activiti.cloud.services,org.springframework.cloud.stream'

activiti-cloud-identity:
  enabled: true

activiti-keycloak:
  enabled: false
  ingress:
    enabled: true
  keycloak:
    enabled: true
    keycloak:
      preStartScript: |
        /opt/jboss/keycloak/bin/add-user.sh -u admin -p admin
        /opt/jboss/keycloak/bin/add-user-keycloak.sh -r master -u admin -p admin
        cp /realm/activiti-realm.json .
        sed -i 's/placeholder.com/*/g' activiti-realm.json
  
activiti-cloud-gateway:
  replicaCount: 2
  service:
    name: activiti-cloud-gateway
  image:
    repository: activiti/activiti-cloud-gateway
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"

postgres:
  enabled: true
  postgresqlPassword: password
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  postgresqlExtendedConf:
    maxConnections: 500

postgres-query:
  enabled: true
  postgresqlPassword: password
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  postgresqlExtendedConf:
    maxConnections: 500

postgres-audit:
  enabled: true
  postgresqlPassword: password
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  postgresqlExtendedConf:
    maxConnections: 500

rabbitmq:
  enabled: true
  service:
    clusterIP: None
  persistentVolume:
    enabled: true
  rabbitmqUsername: "guest"
  rabbitmqPassword: "guest"
  rabbitmqErlangCookie: 124567890abcdefghijklmnopqrstuv
  rabbitmqMemoryHighWatermark: 1500MB
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  rbac:
    create: true
  replicaCount: 3
  ingress:
    enabled: true
    hostName: "rabbitmq.feature-aae-731.35.228.195.195.nip.io"
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
